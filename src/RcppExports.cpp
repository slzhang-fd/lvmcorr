// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// construct_sigma1
arma::mat construct_sigma1(const arma::vec& sig_all, const arma::vec& rho);
RcppExport SEXP _lvmcorr_construct_sigma1(SEXP sig_allSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type sig_all(sig_allSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(construct_sigma1(sig_all, rho));
    return rcpp_result_gen;
END_RCPP
}
// fisher_z_trans
arma::mat fisher_z_trans(arma::mat z);
RcppExport SEXP _lvmcorr_fisher_z_trans(SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(fisher_z_trans(z));
    return rcpp_result_gen;
END_RCPP
}
// mean_diff_nonzero
double mean_diff_nonzero(arma::mat x, unsigned int j);
RcppExport SEXP _lvmcorr_mean_diff_nonzero(SEXP xSEXP, SEXP jSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type j(jSEXP);
    rcpp_result_gen = Rcpp::wrap(mean_diff_nonzero(x, j));
    return rcpp_result_gen;
END_RCPP
}
// sample_g_b
void sample_g_b(arma::mat& g, const arma::mat& g_free_ind, const arma::uvec& xi, const arma::mat& x_covariates, const arma::mat& ytp, const arma::mat& yfp, const arma::mat& beta_tp, const arma::mat& alpha_tp, const arma::mat& beta_fp, const arma::mat& alpha_fp, arma::vec& b_tp, arma::vec& b_fp, const arma::vec& e_tp, const arma::vec& e_fp, const arma::mat& e12, const double sig2_tp, const double sig2_fp, const double rho);
RcppExport SEXP _lvmcorr_sample_g_b(SEXP gSEXP, SEXP g_free_indSEXP, SEXP xiSEXP, SEXP x_covariatesSEXP, SEXP ytpSEXP, SEXP yfpSEXP, SEXP beta_tpSEXP, SEXP alpha_tpSEXP, SEXP beta_fpSEXP, SEXP alpha_fpSEXP, SEXP b_tpSEXP, SEXP b_fpSEXP, SEXP e_tpSEXP, SEXP e_fpSEXP, SEXP e12SEXP, SEXP sig2_tpSEXP, SEXP sig2_fpSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type g(gSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type g_free_ind(g_free_indSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x_covariates(x_covariatesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type ytp(ytpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type yfp(yfpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta_tp(beta_tpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type alpha_tp(alpha_tpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta_fp(beta_fpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type alpha_fp(alpha_fpSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type b_tp(b_tpSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type b_fp(b_fpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type e_tp(e_tpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type e_fp(e_fpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type e12(e12SEXP);
    Rcpp::traits::input_parameter< const double >::type sig2_tp(sig2_tpSEXP);
    Rcpp::traits::input_parameter< const double >::type sig2_fp(sig2_fpSEXP);
    Rcpp::traits::input_parameter< const double >::type rho(rhoSEXP);
    sample_g_b(g, g_free_ind, xi, x_covariates, ytp, yfp, beta_tp, alpha_tp, beta_fp, alpha_fp, b_tp, b_fp, e_tp, e_fp, e12, sig2_tp, sig2_fp, rho);
    return R_NilValue;
END_RCPP
}
// lvmcorr_cpp
Rcpp::List lvmcorr_cpp(arma::mat ytp, arma::mat yfp, arma::mat x_covariates, arma::vec b_tp, arma::vec b_fp, arma::mat g, arma::mat g_free_ind, double sig2_tp, double sig2_fp, double rho, arma::vec e_tp, arma::vec e_fp, arma::mat e12, arma::uvec xi, arma::mat beta_tp, arma::mat alpha_tp, arma::mat beta_fp, arma::mat alpha_fp, int mcmc_len, bool verbose);
RcppExport SEXP _lvmcorr_lvmcorr_cpp(SEXP ytpSEXP, SEXP yfpSEXP, SEXP x_covariatesSEXP, SEXP b_tpSEXP, SEXP b_fpSEXP, SEXP gSEXP, SEXP g_free_indSEXP, SEXP sig2_tpSEXP, SEXP sig2_fpSEXP, SEXP rhoSEXP, SEXP e_tpSEXP, SEXP e_fpSEXP, SEXP e12SEXP, SEXP xiSEXP, SEXP beta_tpSEXP, SEXP alpha_tpSEXP, SEXP beta_fpSEXP, SEXP alpha_fpSEXP, SEXP mcmc_lenSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type ytp(ytpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type yfp(yfpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_covariates(x_covariatesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_tp(b_tpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_fp(b_fpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type g(gSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type g_free_ind(g_free_indSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_tp(sig2_tpSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_fp(sig2_fpSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type e_tp(e_tpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type e_fp(e_fpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type e12(e12SEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_tp(beta_tpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_tp(alpha_tpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_fp(beta_fpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_fp(alpha_fpSEXP);
    Rcpp::traits::input_parameter< int >::type mcmc_len(mcmc_lenSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(lvmcorr_cpp(ytp, yfp, x_covariates, b_tp, b_fp, g, g_free_ind, sig2_tp, sig2_fp, rho, e_tp, e_fp, e12, xi, beta_tp, alpha_tp, beta_fp, alpha_fp, mcmc_len, verbose));
    return rcpp_result_gen;
END_RCPP
}
// lvmcorr_multi_chains
Rcpp::List lvmcorr_multi_chains(arma::mat ytp, arma::mat yfp, arma::mat x_covariates, arma::vec b_tp, arma::vec b_fp, arma::mat g, arma::mat g_free_ind, double sig2_tp, double sig2_fp, double rho, arma::uvec xi, arma::mat beta_tp, arma::mat alpha_tp, arma::mat beta_fp, arma::mat alpha_fp, int mcmc_len, int chains);
RcppExport SEXP _lvmcorr_lvmcorr_multi_chains(SEXP ytpSEXP, SEXP yfpSEXP, SEXP x_covariatesSEXP, SEXP b_tpSEXP, SEXP b_fpSEXP, SEXP gSEXP, SEXP g_free_indSEXP, SEXP sig2_tpSEXP, SEXP sig2_fpSEXP, SEXP rhoSEXP, SEXP xiSEXP, SEXP beta_tpSEXP, SEXP alpha_tpSEXP, SEXP beta_fpSEXP, SEXP alpha_fpSEXP, SEXP mcmc_lenSEXP, SEXP chainsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type ytp(ytpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type yfp(yfpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_covariates(x_covariatesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_tp(b_tpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_fp(b_fpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type g(gSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type g_free_ind(g_free_indSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_tp(sig2_tpSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_fp(sig2_fpSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_tp(beta_tpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_tp(alpha_tpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_fp(beta_fpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_fp(alpha_fpSEXP);
    Rcpp::traits::input_parameter< int >::type mcmc_len(mcmc_lenSEXP);
    Rcpp::traits::input_parameter< int >::type chains(chainsSEXP);
    rcpp_result_gen = Rcpp::wrap(lvmcorr_multi_chains(ytp, yfp, x_covariates, b_tp, b_fp, g, g_free_ind, sig2_tp, sig2_fp, rho, xi, beta_tp, alpha_tp, beta_fp, alpha_fp, mcmc_len, chains));
    return rcpp_result_gen;
END_RCPP
}
// lvmcorr_seperate_fin_cpp
Rcpp::List lvmcorr_seperate_fin_cpp(arma::mat ytp_all, arma::mat yfp_all, arma::mat x_covariates, arma::vec b_tp, arma::vec b_fp, arma::mat g, arma::mat g_free_ind, arma::mat e1234, arma::uvec xi, arma::mat beta_tp_all, arma::mat alpha_tp_all, arma::mat beta_fp_all, arma::mat alpha_fp_all, arma::vec u_tp, arma::vec u_fp, int mcmc_len, bool verbose);
RcppExport SEXP _lvmcorr_lvmcorr_seperate_fin_cpp(SEXP ytp_allSEXP, SEXP yfp_allSEXP, SEXP x_covariatesSEXP, SEXP b_tpSEXP, SEXP b_fpSEXP, SEXP gSEXP, SEXP g_free_indSEXP, SEXP e1234SEXP, SEXP xiSEXP, SEXP beta_tp_allSEXP, SEXP alpha_tp_allSEXP, SEXP beta_fp_allSEXP, SEXP alpha_fp_allSEXP, SEXP u_tpSEXP, SEXP u_fpSEXP, SEXP mcmc_lenSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type ytp_all(ytp_allSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type yfp_all(yfp_allSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_covariates(x_covariatesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_tp(b_tpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_fp(b_fpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type g(gSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type g_free_ind(g_free_indSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type e1234(e1234SEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_tp_all(beta_tp_allSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_tp_all(alpha_tp_allSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_fp_all(beta_fp_allSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_fp_all(alpha_fp_allSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u_tp(u_tpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u_fp(u_fpSEXP);
    Rcpp::traits::input_parameter< int >::type mcmc_len(mcmc_lenSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(lvmcorr_seperate_fin_cpp(ytp_all, yfp_all, x_covariates, b_tp, b_fp, g, g_free_ind, e1234, xi, beta_tp_all, alpha_tp_all, beta_fp_all, alpha_fp_all, u_tp, u_fp, mcmc_len, verbose));
    return rcpp_result_gen;
END_RCPP
}
// lvmcorr_seperate_fin_cpp1
Rcpp::List lvmcorr_seperate_fin_cpp1(arma::mat ytp_all, arma::mat yfp_all, arma::mat x_covariates, arma::vec b_tp, arma::vec b_fp, arma::mat g, arma::mat g_free_ind, arma::mat e1234, arma::uvec xi, arma::mat beta_tp_all, arma::mat alpha_tp_all, arma::mat beta_fp_all, arma::mat alpha_fp_all, arma::vec u_tp, arma::vec u_fp, int mcmc_len, bool verbose);
RcppExport SEXP _lvmcorr_lvmcorr_seperate_fin_cpp1(SEXP ytp_allSEXP, SEXP yfp_allSEXP, SEXP x_covariatesSEXP, SEXP b_tpSEXP, SEXP b_fpSEXP, SEXP gSEXP, SEXP g_free_indSEXP, SEXP e1234SEXP, SEXP xiSEXP, SEXP beta_tp_allSEXP, SEXP alpha_tp_allSEXP, SEXP beta_fp_allSEXP, SEXP alpha_fp_allSEXP, SEXP u_tpSEXP, SEXP u_fpSEXP, SEXP mcmc_lenSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type ytp_all(ytp_allSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type yfp_all(yfp_allSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_covariates(x_covariatesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_tp(b_tpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_fp(b_fpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type g(gSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type g_free_ind(g_free_indSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type e1234(e1234SEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_tp_all(beta_tp_allSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_tp_all(alpha_tp_allSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_fp_all(beta_fp_allSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_fp_all(alpha_fp_allSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u_tp(u_tpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u_fp(u_fpSEXP);
    Rcpp::traits::input_parameter< int >::type mcmc_len(mcmc_lenSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(lvmcorr_seperate_fin_cpp1(ytp_all, yfp_all, x_covariates, b_tp, b_fp, g, g_free_ind, e1234, xi, beta_tp_all, alpha_tp_all, beta_fp_all, alpha_fp_all, u_tp, u_fp, mcmc_len, verbose));
    return rcpp_result_gen;
END_RCPP
}
// lvmcorr_seperate_fin_general
Rcpp::List lvmcorr_seperate_fin_general(arma::mat ytp_all, arma::mat yfp_all, arma::mat x_covariates, arma::mat rho_covs, arma::vec b_tp, arma::vec b_fp, arma::mat g, arma::mat g_free_ind, arma::mat e1234, arma::vec sig_init, arma::mat beta_rho_init, arma::uvec xi, arma::mat beta_tp_all, arma::mat alpha_tp_all, arma::mat beta_fp_all, arma::mat alpha_fp_all, arma::vec u_tp, arma::vec u_fp, arma::vec rho_stepsize, int mcmc_len, bool verbose);
RcppExport SEXP _lvmcorr_lvmcorr_seperate_fin_general(SEXP ytp_allSEXP, SEXP yfp_allSEXP, SEXP x_covariatesSEXP, SEXP rho_covsSEXP, SEXP b_tpSEXP, SEXP b_fpSEXP, SEXP gSEXP, SEXP g_free_indSEXP, SEXP e1234SEXP, SEXP sig_initSEXP, SEXP beta_rho_initSEXP, SEXP xiSEXP, SEXP beta_tp_allSEXP, SEXP alpha_tp_allSEXP, SEXP beta_fp_allSEXP, SEXP alpha_fp_allSEXP, SEXP u_tpSEXP, SEXP u_fpSEXP, SEXP rho_stepsizeSEXP, SEXP mcmc_lenSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type ytp_all(ytp_allSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type yfp_all(yfp_allSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_covariates(x_covariatesSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type rho_covs(rho_covsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_tp(b_tpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_fp(b_fpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type g(gSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type g_free_ind(g_free_indSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type e1234(e1234SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sig_init(sig_initSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_rho_init(beta_rho_initSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_tp_all(beta_tp_allSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_tp_all(alpha_tp_allSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_fp_all(beta_fp_allSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_fp_all(alpha_fp_allSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u_tp(u_tpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u_fp(u_fpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type rho_stepsize(rho_stepsizeSEXP);
    Rcpp::traits::input_parameter< int >::type mcmc_len(mcmc_lenSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(lvmcorr_seperate_fin_general(ytp_all, yfp_all, x_covariates, rho_covs, b_tp, b_fp, g, g_free_ind, e1234, sig_init, beta_rho_init, xi, beta_tp_all, alpha_tp_all, beta_fp_all, alpha_fp_all, u_tp, u_fp, rho_stepsize, mcmc_len, verbose));
    return rcpp_result_gen;
END_RCPP
}
// getlvmcorr_threads
int getlvmcorr_threads();
RcppExport SEXP _lvmcorr_getlvmcorr_threads() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(getlvmcorr_threads());
    return rcpp_result_gen;
END_RCPP
}
// setlvmcorr_threads
int setlvmcorr_threads(int threads);
RcppExport SEXP _lvmcorr_setlvmcorr_threads(SEXP threadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type threads(threadsSEXP);
    rcpp_result_gen = Rcpp::wrap(setlvmcorr_threads(threads));
    return rcpp_result_gen;
END_RCPP
}
// sample_alpha_beta
void sample_alpha_beta(arma::vec& alpha_tpfp, arma::vec& beta_tpfp, const arma::mat& ytpfp, arma::vec eta_tpfp);
RcppExport SEXP _lvmcorr_sample_alpha_beta(SEXP alpha_tpfpSEXP, SEXP beta_tpfpSEXP, SEXP ytpfpSEXP, SEXP eta_tpfpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type alpha_tpfp(alpha_tpfpSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type beta_tpfp(beta_tpfpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type ytpfp(ytpfpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type eta_tpfp(eta_tpfpSEXP);
    sample_alpha_beta(alpha_tpfp, beta_tpfp, ytpfp, eta_tpfp);
    return R_NilValue;
END_RCPP
}
// sample_eta
void sample_eta(arma::vec& eta_tpfp, const arma::mat& ytpfp, arma::vec beta_tpfp, arma::vec alpha_tpfp);
RcppExport SEXP _lvmcorr_sample_eta(SEXP eta_tpfpSEXP, SEXP ytpfpSEXP, SEXP beta_tpfpSEXP, SEXP alpha_tpfpSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec& >::type eta_tpfp(eta_tpfpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type ytpfp(ytpfpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_tpfp(beta_tpfpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alpha_tpfp(alpha_tpfpSEXP);
    sample_eta(eta_tpfp, ytpfp, beta_tpfp, alpha_tpfp);
    return R_NilValue;
END_RCPP
}
// sample_b_tp_c
arma::vec sample_b_tp_c(arma::vec b_tp, const arma::mat& ytp, const arma::uvec& xi, const arma::mat& x_covariates, const arma::mat& beta_tp, const arma::mat& alpha_tp, const arma::vec& e_tp, const arma::vec& e1);
RcppExport SEXP _lvmcorr_sample_b_tp_c(SEXP b_tpSEXP, SEXP ytpSEXP, SEXP xiSEXP, SEXP x_covariatesSEXP, SEXP beta_tpSEXP, SEXP alpha_tpSEXP, SEXP e_tpSEXP, SEXP e1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type b_tp(b_tpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type ytp(ytpSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x_covariates(x_covariatesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta_tp(beta_tpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type alpha_tp(alpha_tpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type e_tp(e_tpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type e1(e1SEXP);
    rcpp_result_gen = Rcpp::wrap(sample_b_tp_c(b_tp, ytp, xi, x_covariates, beta_tp, alpha_tp, e_tp, e1));
    return rcpp_result_gen;
END_RCPP
}
// sample_b_fp_c
arma::vec sample_b_fp_c(arma::vec b_fp, const arma::mat& yfp, const arma::uvec& xi, const arma::mat& x_covariates, const arma::mat& beta_fp, const arma::mat& alpha_fp, const arma::vec& e_fp, const arma::vec& e2);
RcppExport SEXP _lvmcorr_sample_b_fp_c(SEXP b_fpSEXP, SEXP yfpSEXP, SEXP xiSEXP, SEXP x_covariatesSEXP, SEXP beta_fpSEXP, SEXP alpha_fpSEXP, SEXP e_fpSEXP, SEXP e2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type b_fp(b_fpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type yfp(yfpSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x_covariates(x_covariatesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta_fp(beta_fpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type alpha_fp(alpha_fpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type e_fp(e_fpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type e2(e2SEXP);
    rcpp_result_gen = Rcpp::wrap(sample_b_fp_c(b_fp, yfp, xi, x_covariates, beta_fp, alpha_fp, e_fp, e2));
    return rcpp_result_gen;
END_RCPP
}
// sample_b_linear_reg
arma::vec sample_b_linear_reg(arma::vec e_tp1, arma::vec e_tp2, arma::vec e_fp2, arma::mat x_covariates1, arma::mat x_covariates2, arma::vec b_tp, arma::vec b_fp, double sig2_tp, double sig2_fp, double rho);
RcppExport SEXP _lvmcorr_sample_b_linear_reg(SEXP e_tp1SEXP, SEXP e_tp2SEXP, SEXP e_fp2SEXP, SEXP x_covariates1SEXP, SEXP x_covariates2SEXP, SEXP b_tpSEXP, SEXP b_fpSEXP, SEXP sig2_tpSEXP, SEXP sig2_fpSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type e_tp1(e_tp1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type e_tp2(e_tp2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type e_fp2(e_fp2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_covariates1(x_covariates1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_covariates2(x_covariates2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_tp(b_tpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_fp(b_fpSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_tp(sig2_tpSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_fp(sig2_fpSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_b_linear_reg(e_tp1, e_tp2, e_fp2, x_covariates1, x_covariates2, b_tp, b_fp, sig2_tp, sig2_fp, rho));
    return rcpp_result_gen;
END_RCPP
}
// sample_b_tp_new
arma::vec sample_b_tp_new(arma::mat Sigma, arma::mat e1234, arma::mat x_covariates, arma::vec b_tp);
RcppExport SEXP _lvmcorr_sample_b_tp_new(SEXP SigmaSEXP, SEXP e1234SEXP, SEXP x_covariatesSEXP, SEXP b_tpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type e1234(e1234SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_covariates(x_covariatesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_tp(b_tpSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_b_tp_new(Sigma, e1234, x_covariates, b_tp));
    return rcpp_result_gen;
END_RCPP
}
// sample_b_fp_new
arma::vec sample_b_fp_new(arma::mat Sigma, arma::mat e1234, arma::mat x_covariates, arma::vec b_fp);
RcppExport SEXP _lvmcorr_sample_b_fp_new(SEXP SigmaSEXP, SEXP e1234SEXP, SEXP x_covariatesSEXP, SEXP b_fpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type e1234(e1234SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_covariates(x_covariatesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_fp(b_fpSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_b_fp_new(Sigma, e1234, x_covariates, b_fp));
    return rcpp_result_gen;
END_RCPP
}
// sample_e_tp_c
arma::vec sample_e_tp_c(arma::vec e_tp, arma::mat ytp, arma::uvec xi, arma::vec b_tp, double sig2_tp, arma::mat beta_tp, arma::mat alpha_tp, arma::mat x_covariates);
RcppExport SEXP _lvmcorr_sample_e_tp_c(SEXP e_tpSEXP, SEXP ytpSEXP, SEXP xiSEXP, SEXP b_tpSEXP, SEXP sig2_tpSEXP, SEXP beta_tpSEXP, SEXP alpha_tpSEXP, SEXP x_covariatesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type e_tp(e_tpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ytp(ytpSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_tp(b_tpSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_tp(sig2_tpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_tp(beta_tpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_tp(alpha_tpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_covariates(x_covariatesSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_e_tp_c(e_tp, ytp, xi, b_tp, sig2_tp, beta_tp, alpha_tp, x_covariates));
    return rcpp_result_gen;
END_RCPP
}
// sample_e_fp_c
arma::vec sample_e_fp_c(arma::vec e_fp, arma::mat yfp, arma::uvec xi, arma::vec b_fp, double sig2_fp, arma::mat beta_fp, arma::mat alpha_fp, arma::mat x_covariates);
RcppExport SEXP _lvmcorr_sample_e_fp_c(SEXP e_fpSEXP, SEXP yfpSEXP, SEXP xiSEXP, SEXP b_fpSEXP, SEXP sig2_fpSEXP, SEXP beta_fpSEXP, SEXP alpha_fpSEXP, SEXP x_covariatesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type e_fp(e_fpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type yfp(yfpSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_fp(b_fpSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_fp(sig2_fpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_fp(beta_fpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_fp(alpha_fpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_covariates(x_covariatesSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_e_fp_c(e_fp, yfp, xi, b_fp, sig2_fp, beta_fp, alpha_fp, x_covariates));
    return rcpp_result_gen;
END_RCPP
}
// sample_e12_c
arma::mat sample_e12_c(arma::mat e12, arma::mat ytp, arma::mat yfp, arma::uvec xi, arma::mat beta_tp, arma::mat alpha_tp, arma::mat beta_fp, arma::mat alpha_fp, double sig2_tp, double sig2_fp, double rho, arma::vec b_tp, arma::vec b_fp, arma::mat x_covariates);
RcppExport SEXP _lvmcorr_sample_e12_c(SEXP e12SEXP, SEXP ytpSEXP, SEXP yfpSEXP, SEXP xiSEXP, SEXP beta_tpSEXP, SEXP alpha_tpSEXP, SEXP beta_fpSEXP, SEXP alpha_fpSEXP, SEXP sig2_tpSEXP, SEXP sig2_fpSEXP, SEXP rhoSEXP, SEXP b_tpSEXP, SEXP b_fpSEXP, SEXP x_covariatesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type e12(e12SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ytp(ytpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type yfp(yfpSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_tp(beta_tpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_tp(alpha_tpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_fp(beta_fpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_fp(alpha_fpSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_tp(sig2_tpSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_fp(sig2_fpSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_tp(b_tpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_fp(b_fpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_covariates(x_covariatesSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_e12_c(e12, ytp, yfp, xi, beta_tp, alpha_tp, beta_fp, alpha_fp, sig2_tp, sig2_fp, rho, b_tp, b_fp, x_covariates));
    return rcpp_result_gen;
END_RCPP
}
// test1
double test1(arma::vec tmp, arma::vec y_i);
RcppExport SEXP _lvmcorr_test1(SEXP tmpSEXP, SEXP y_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type tmp(tmpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y_i(y_iSEXP);
    rcpp_result_gen = Rcpp::wrap(test1(tmp, y_i));
    return rcpp_result_gen;
END_RCPP
}
// test2
double test2(arma::vec tmp, arma::vec y_i);
RcppExport SEXP _lvmcorr_test2(SEXP tmpSEXP, SEXP y_iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type tmp(tmpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y_i(y_iSEXP);
    rcpp_result_gen = Rcpp::wrap(test2(tmp, y_i));
    return rcpp_result_gen;
END_RCPP
}
// test13
arma::vec test13(arma::vec tmp, int tail);
RcppExport SEXP _lvmcorr_test13(SEXP tmpSEXP, SEXP tailSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type tmp(tmpSEXP);
    Rcpp::traits::input_parameter< int >::type tail(tailSEXP);
    rcpp_result_gen = Rcpp::wrap(test13(tmp, tail));
    return rcpp_result_gen;
END_RCPP
}
// sample_g_c
arma::mat sample_g_c(arma::mat g, const arma::mat& g_free_ind, const arma::uvec& xi, const arma::mat& x_covariates);
RcppExport SEXP _lvmcorr_sample_g_c(SEXP gSEXP, SEXP g_free_indSEXP, SEXP xiSEXP, SEXP x_covariatesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type g(gSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type g_free_ind(g_free_indSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x_covariates(x_covariatesSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_g_c(g, g_free_ind, xi, x_covariates));
    return rcpp_result_gen;
END_RCPP
}
// sample_sig2_tp_c
double sample_sig2_tp_c(double sig2_tp, double sig2_fp, double rho, arma::vec e_tp, arma::mat e12, arma::uvec xi);
RcppExport SEXP _lvmcorr_sample_sig2_tp_c(SEXP sig2_tpSEXP, SEXP sig2_fpSEXP, SEXP rhoSEXP, SEXP e_tpSEXP, SEXP e12SEXP, SEXP xiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type sig2_tp(sig2_tpSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_fp(sig2_fpSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type e_tp(e_tpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type e12(e12SEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type xi(xiSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_sig2_tp_c(sig2_tp, sig2_fp, rho, e_tp, e12, xi));
    return rcpp_result_gen;
END_RCPP
}
// sample_sig2_fp_c
double sample_sig2_fp_c(double sig2_tp, double sig2_fp, double rho, arma::vec e_fp, arma::mat e12, arma::uvec xi);
RcppExport SEXP _lvmcorr_sample_sig2_fp_c(SEXP sig2_tpSEXP, SEXP sig2_fpSEXP, SEXP rhoSEXP, SEXP e_fpSEXP, SEXP e12SEXP, SEXP xiSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type sig2_tp(sig2_tpSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_fp(sig2_fpSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type e_fp(e_fpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type e12(e12SEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type xi(xiSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_sig2_fp_c(sig2_tp, sig2_fp, rho, e_fp, e12, xi));
    return rcpp_result_gen;
END_RCPP
}
// sample_rho_c
double sample_rho_c(double rho, const arma::uvec& xi, double sig2_tp, double sig2_fp, const arma::mat& e12);
RcppExport SEXP _lvmcorr_sample_rho_c(SEXP rhoSEXP, SEXP xiSEXP, SEXP sig2_tpSEXP, SEXP sig2_fpSEXP, SEXP e12SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_tp(sig2_tpSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_fp(sig2_fpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type e12(e12SEXP);
    rcpp_result_gen = Rcpp::wrap(sample_rho_c(rho, xi, sig2_tp, sig2_fp, e12));
    return rcpp_result_gen;
END_RCPP
}
// log_rho_export
double log_rho_export(double x, unsigned int rho_loc, arma::mat e1234, double sig2_tp, double sig2_fp, arma::vec rho);
RcppExport SEXP _lvmcorr_log_rho_export(SEXP xSEXP, SEXP rho_locSEXP, SEXP e1234SEXP, SEXP sig2_tpSEXP, SEXP sig2_fpSEXP, SEXP rhoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type rho_loc(rho_locSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type e1234(e1234SEXP);
    Rcpp::traits::input_parameter< double >::type sig2_tp(sig2_tpSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_fp(sig2_fpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type rho(rhoSEXP);
    rcpp_result_gen = Rcpp::wrap(log_rho_export(x, rho_loc, e1234, sig2_tp, sig2_fp, rho));
    return rcpp_result_gen;
END_RCPP
}
// sample_Sigma_new1
arma::mat sample_Sigma_new1(const arma::mat& e1234);
RcppExport SEXP _lvmcorr_sample_Sigma_new1(SEXP e1234SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type e1234(e1234SEXP);
    rcpp_result_gen = Rcpp::wrap(sample_Sigma_new1(e1234));
    return rcpp_result_gen;
END_RCPP
}
// sample_rho
void sample_rho(const arma::mat& e1234, const arma::vec& sig_all, arma::vec& rho, double step_rho);
RcppExport SEXP _lvmcorr_sample_rho(SEXP e1234SEXP, SEXP sig_allSEXP, SEXP rhoSEXP, SEXP step_rhoSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type e1234(e1234SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type sig_all(sig_allSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type step_rho(step_rhoSEXP);
    sample_rho(e1234, sig_all, rho, step_rho);
    return R_NilValue;
END_RCPP
}
// sample_sig2
void sample_sig2(const arma::mat& e1234, arma::vec& sig_all, const arma::vec& rho, double step_sigma);
RcppExport SEXP _lvmcorr_sample_sig2(SEXP e1234SEXP, SEXP sig_allSEXP, SEXP rhoSEXP, SEXP step_sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type e1234(e1234SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type sig_all(sig_allSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< double >::type step_sigma(step_sigmaSEXP);
    sample_sig2(e1234, sig_all, rho, step_sigma);
    return R_NilValue;
END_RCPP
}
// sample_sig2_sep
void sample_sig2_sep(const arma::mat& e1234_1, const arma::mat& e1234_2, arma::vec& sig_all, const arma::vec& rho1, const arma::vec& rho2, double step_sigma);
RcppExport SEXP _lvmcorr_sample_sig2_sep(SEXP e1234_1SEXP, SEXP e1234_2SEXP, SEXP sig_allSEXP, SEXP rho1SEXP, SEXP rho2SEXP, SEXP step_sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type e1234_1(e1234_1SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type e1234_2(e1234_2SEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type sig_all(sig_allSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type rho1(rho1SEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type rho2(rho2SEXP);
    Rcpp::traits::input_parameter< double >::type step_sigma(step_sigmaSEXP);
    sample_sig2_sep(e1234_1, e1234_2, sig_all, rho1, rho2, step_sigma);
    return R_NilValue;
END_RCPP
}
// sample_u_c
arma::vec sample_u_c(arma::vec ytp_fin, arma::mat x_covariates, arma::vec u_tp, double sig2_u_tp);
RcppExport SEXP _lvmcorr_sample_u_c(SEXP ytp_finSEXP, SEXP x_covariatesSEXP, SEXP u_tpSEXP, SEXP sig2_u_tpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type ytp_fin(ytp_finSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_covariates(x_covariatesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u_tp(u_tpSEXP);
    Rcpp::traits::input_parameter< double >::type sig2_u_tp(sig2_u_tpSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_u_c(ytp_fin, x_covariates, u_tp, sig2_u_tp));
    return rcpp_result_gen;
END_RCPP
}
// sample_sig2_u
double sample_sig2_u(arma::vec u_tp);
RcppExport SEXP _lvmcorr_sample_sig2_u(SEXP u_tpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type u_tp(u_tpSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_sig2_u(u_tp));
    return rcpp_result_gen;
END_RCPP
}
// test_inv_gamma
arma::vec test_inv_gamma(double alpha, double beta, int nn);
RcppExport SEXP _lvmcorr_test_inv_gamma(SEXP alphaSEXP, SEXP betaSEXP, SEXP nnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type nn(nnSEXP);
    rcpp_result_gen = Rcpp::wrap(test_inv_gamma(alpha, beta, nn));
    return rcpp_result_gen;
END_RCPP
}
// my_trunc_norm
arma::vec my_trunc_norm(arma::vec mu, arma::vec direction);
RcppExport SEXP _lvmcorr_my_trunc_norm(SEXP muSEXP, SEXP directionSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type direction(directionSEXP);
    rcpp_result_gen = Rcpp::wrap(my_trunc_norm(mu, direction));
    return rcpp_result_gen;
END_RCPP
}
// sample_u_tp_new
arma::vec sample_u_tp_new(arma::mat Sigma, arma::mat e1234, arma::vec u_tp, const arma::mat& x_covariates);
RcppExport SEXP _lvmcorr_sample_u_tp_new(SEXP SigmaSEXP, SEXP e1234SEXP, SEXP u_tpSEXP, SEXP x_covariatesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type e1234(e1234SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u_tp(u_tpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x_covariates(x_covariatesSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_u_tp_new(Sigma, e1234, u_tp, x_covariates));
    return rcpp_result_gen;
END_RCPP
}
// sample_u_fp_new
arma::vec sample_u_fp_new(arma::mat Sigma, arma::mat e1234, arma::vec u_fp, const arma::mat& x_covariates);
RcppExport SEXP _lvmcorr_sample_u_fp_new(SEXP SigmaSEXP, SEXP e1234SEXP, SEXP u_fpSEXP, SEXP x_covariatesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Sigma(SigmaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type e1234(e1234SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u_fp(u_fpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x_covariates(x_covariatesSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_u_fp_new(Sigma, e1234, u_fp, x_covariates));
    return rcpp_result_gen;
END_RCPP
}
// test3
arma::vec test3(double mu, double sig2, double cut_point, bool direct, int n);
RcppExport SEXP _lvmcorr_test3(SEXP muSEXP, SEXP sig2SEXP, SEXP cut_pointSEXP, SEXP directSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sig2(sig2SEXP);
    Rcpp::traits::input_parameter< double >::type cut_point(cut_pointSEXP);
    Rcpp::traits::input_parameter< bool >::type direct(directSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(test3(mu, sig2, cut_point, direct, n));
    return rcpp_result_gen;
END_RCPP
}
// sample_e1234
void sample_e1234(arma::mat& e1234, const arma::mat& ytp, const arma::mat& yfp, const arma::vec& ytp_fin, const arma::vec& yfp_fin, const arma::uvec& xi, const arma::mat& beta_tp, const arma::mat& alpha_tp, const arma::mat& beta_fp, const arma::mat& alpha_fp, const arma::vec& b_tp, const arma::vec& b_fp, const arma::vec& u_tp, const arma::vec& u_fp, const arma::mat& x_covariates, const arma::mat& Sigma);
RcppExport SEXP _lvmcorr_sample_e1234(SEXP e1234SEXP, SEXP ytpSEXP, SEXP yfpSEXP, SEXP ytp_finSEXP, SEXP yfp_finSEXP, SEXP xiSEXP, SEXP beta_tpSEXP, SEXP alpha_tpSEXP, SEXP beta_fpSEXP, SEXP alpha_fpSEXP, SEXP b_tpSEXP, SEXP b_fpSEXP, SEXP u_tpSEXP, SEXP u_fpSEXP, SEXP x_covariatesSEXP, SEXP SigmaSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type e1234(e1234SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type ytp(ytpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type yfp(yfpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type ytp_fin(ytp_finSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type yfp_fin(yfp_finSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta_tp(beta_tpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type alpha_tp(alpha_tpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta_fp(beta_fpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type alpha_fp(alpha_fpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type b_tp(b_tpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type b_fp(b_fpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type u_tp(u_tpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type u_fp(u_fpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x_covariates(x_covariatesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sigma(SigmaSEXP);
    sample_e1234(e1234, ytp, yfp, ytp_fin, yfp_fin, xi, beta_tp, alpha_tp, beta_fp, alpha_fp, b_tp, b_fp, u_tp, u_fp, x_covariates, Sigma);
    return R_NilValue;
END_RCPP
}
// sample_e1234_general
void sample_e1234_general(arma::mat& e1234, const arma::mat& ytp, const arma::mat& yfp, const arma::vec& ytp_fin, const arma::vec& yfp_fin, const arma::uvec& xi, const arma::mat& beta_tp, const arma::mat& alpha_tp, const arma::mat& beta_fp, const arma::mat& alpha_fp, const arma::vec& b_tp, const arma::vec& b_fp, const arma::vec& u_tp, const arma::vec& u_fp, const arma::mat& x_covariates, const arma::vec& sig_all, const arma::mat rho_mat);
RcppExport SEXP _lvmcorr_sample_e1234_general(SEXP e1234SEXP, SEXP ytpSEXP, SEXP yfpSEXP, SEXP ytp_finSEXP, SEXP yfp_finSEXP, SEXP xiSEXP, SEXP beta_tpSEXP, SEXP alpha_tpSEXP, SEXP beta_fpSEXP, SEXP alpha_fpSEXP, SEXP b_tpSEXP, SEXP b_fpSEXP, SEXP u_tpSEXP, SEXP u_fpSEXP, SEXP x_covariatesSEXP, SEXP sig_allSEXP, SEXP rho_matSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type e1234(e1234SEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type ytp(ytpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type yfp(yfpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type ytp_fin(ytp_finSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type yfp_fin(yfp_finSEXP);
    Rcpp::traits::input_parameter< const arma::uvec& >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta_tp(beta_tpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type alpha_tp(alpha_tpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta_fp(beta_fpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type alpha_fp(alpha_fpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type b_tp(b_tpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type b_fp(b_fpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type u_tp(u_tpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type u_fp(u_fpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type x_covariates(x_covariatesSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type sig_all(sig_allSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type rho_mat(rho_matSEXP);
    sample_e1234_general(e1234, ytp, yfp, ytp_fin, yfp_fin, xi, beta_tp, alpha_tp, beta_fp, alpha_fp, b_tp, b_fp, u_tp, u_fp, x_covariates, sig_all, rho_mat);
    return R_NilValue;
END_RCPP
}
// sample_xi
arma::uvec sample_xi(arma::mat x_covariates, arma::mat g, arma::mat beta_tp, arma::mat alpha_tp, arma::mat beta_fp, arma::mat alpha_fp, arma::mat ytp, arma::vec b_tp, arma::vec e_tp, arma::mat yfp, arma::vec b_fp, arma::vec e_fp, arma::mat e12);
RcppExport SEXP _lvmcorr_sample_xi(SEXP x_covariatesSEXP, SEXP gSEXP, SEXP beta_tpSEXP, SEXP alpha_tpSEXP, SEXP beta_fpSEXP, SEXP alpha_fpSEXP, SEXP ytpSEXP, SEXP b_tpSEXP, SEXP e_tpSEXP, SEXP yfpSEXP, SEXP b_fpSEXP, SEXP e_fpSEXP, SEXP e12SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x_covariates(x_covariatesSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type g(gSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_tp(beta_tpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_tp(alpha_tpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_fp(beta_fpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type alpha_fp(alpha_fpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type ytp(ytpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_tp(b_tpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type e_tp(e_tpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type yfp(yfpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b_fp(b_fpSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type e_fp(e_fpSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type e12(e12SEXP);
    rcpp_result_gen = Rcpp::wrap(sample_xi(x_covariates, g, beta_tp, alpha_tp, beta_fp, alpha_fp, ytp, b_tp, e_tp, yfp, b_fp, e_fp, e12));
    return rcpp_result_gen;
END_RCPP
}
// print_prob_m1
arma::mat print_prob_m1(const arma::mat& x_covariates, const arma::mat& g, const arma::mat& beta_tp, const arma::mat& alpha_tp, const arma::mat& beta_fp, const arma::mat& alpha_fp, const arma::mat& ytp, const arma::vec& b_tp, const arma::mat& yfp, const arma::vec& b_fp, const arma::vec& ytp_fin, const arma::vec& u_tp, const arma::vec& yfp_fin, const arma::vec& u_fp, const arma::mat& e1234);
RcppExport SEXP _lvmcorr_print_prob_m1(SEXP x_covariatesSEXP, SEXP gSEXP, SEXP beta_tpSEXP, SEXP alpha_tpSEXP, SEXP beta_fpSEXP, SEXP alpha_fpSEXP, SEXP ytpSEXP, SEXP b_tpSEXP, SEXP yfpSEXP, SEXP b_fpSEXP, SEXP ytp_finSEXP, SEXP u_tpSEXP, SEXP yfp_finSEXP, SEXP u_fpSEXP, SEXP e1234SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x_covariates(x_covariatesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type g(gSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta_tp(beta_tpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type alpha_tp(alpha_tpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta_fp(beta_fpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type alpha_fp(alpha_fpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type ytp(ytpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type b_tp(b_tpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type yfp(yfpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type b_fp(b_fpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type ytp_fin(ytp_finSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type u_tp(u_tpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type yfp_fin(yfp_finSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type u_fp(u_fpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type e1234(e1234SEXP);
    rcpp_result_gen = Rcpp::wrap(print_prob_m1(x_covariates, g, beta_tp, alpha_tp, beta_fp, alpha_fp, ytp, b_tp, yfp, b_fp, ytp_fin, u_tp, yfp_fin, u_fp, e1234));
    return rcpp_result_gen;
END_RCPP
}
// print_prob_m
arma::mat print_prob_m(const arma::mat& x_covariates, const arma::mat& g, const arma::mat& beta_tp, const arma::mat& alpha_tp, const arma::mat& beta_fp, const arma::mat& alpha_fp, const arma::mat& ytp, const arma::vec& b_tp, const arma::mat& yfp, const arma::vec& b_fp, const arma::vec& ytp_fin, const arma::vec& u_tp, const arma::vec& yfp_fin, const arma::vec& u_fp, const arma::mat& e1234);
RcppExport SEXP _lvmcorr_print_prob_m(SEXP x_covariatesSEXP, SEXP gSEXP, SEXP beta_tpSEXP, SEXP alpha_tpSEXP, SEXP beta_fpSEXP, SEXP alpha_fpSEXP, SEXP ytpSEXP, SEXP b_tpSEXP, SEXP yfpSEXP, SEXP b_fpSEXP, SEXP ytp_finSEXP, SEXP u_tpSEXP, SEXP yfp_finSEXP, SEXP u_fpSEXP, SEXP e1234SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x_covariates(x_covariatesSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type g(gSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta_tp(beta_tpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type alpha_tp(alpha_tpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type beta_fp(beta_fpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type alpha_fp(alpha_fpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type ytp(ytpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type b_tp(b_tpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type yfp(yfpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type b_fp(b_fpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type ytp_fin(ytp_finSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type u_tp(u_tpSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type yfp_fin(yfp_finSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type u_fp(u_fpSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type e1234(e1234SEXP);
    rcpp_result_gen = Rcpp::wrap(print_prob_m(x_covariates, g, beta_tp, alpha_tp, beta_fp, alpha_fp, ytp, b_tp, yfp, b_fp, ytp_fin, u_tp, yfp_fin, u_fp, e1234));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_lvmcorr_construct_sigma1", (DL_FUNC) &_lvmcorr_construct_sigma1, 2},
    {"_lvmcorr_fisher_z_trans", (DL_FUNC) &_lvmcorr_fisher_z_trans, 1},
    {"_lvmcorr_mean_diff_nonzero", (DL_FUNC) &_lvmcorr_mean_diff_nonzero, 2},
    {"_lvmcorr_sample_g_b", (DL_FUNC) &_lvmcorr_sample_g_b, 18},
    {"_lvmcorr_lvmcorr_cpp", (DL_FUNC) &_lvmcorr_lvmcorr_cpp, 20},
    {"_lvmcorr_lvmcorr_multi_chains", (DL_FUNC) &_lvmcorr_lvmcorr_multi_chains, 17},
    {"_lvmcorr_lvmcorr_seperate_fin_cpp", (DL_FUNC) &_lvmcorr_lvmcorr_seperate_fin_cpp, 17},
    {"_lvmcorr_lvmcorr_seperate_fin_cpp1", (DL_FUNC) &_lvmcorr_lvmcorr_seperate_fin_cpp1, 17},
    {"_lvmcorr_lvmcorr_seperate_fin_general", (DL_FUNC) &_lvmcorr_lvmcorr_seperate_fin_general, 21},
    {"_lvmcorr_getlvmcorr_threads", (DL_FUNC) &_lvmcorr_getlvmcorr_threads, 0},
    {"_lvmcorr_setlvmcorr_threads", (DL_FUNC) &_lvmcorr_setlvmcorr_threads, 1},
    {"_lvmcorr_sample_alpha_beta", (DL_FUNC) &_lvmcorr_sample_alpha_beta, 4},
    {"_lvmcorr_sample_eta", (DL_FUNC) &_lvmcorr_sample_eta, 4},
    {"_lvmcorr_sample_b_tp_c", (DL_FUNC) &_lvmcorr_sample_b_tp_c, 8},
    {"_lvmcorr_sample_b_fp_c", (DL_FUNC) &_lvmcorr_sample_b_fp_c, 8},
    {"_lvmcorr_sample_b_linear_reg", (DL_FUNC) &_lvmcorr_sample_b_linear_reg, 10},
    {"_lvmcorr_sample_b_tp_new", (DL_FUNC) &_lvmcorr_sample_b_tp_new, 4},
    {"_lvmcorr_sample_b_fp_new", (DL_FUNC) &_lvmcorr_sample_b_fp_new, 4},
    {"_lvmcorr_sample_e_tp_c", (DL_FUNC) &_lvmcorr_sample_e_tp_c, 8},
    {"_lvmcorr_sample_e_fp_c", (DL_FUNC) &_lvmcorr_sample_e_fp_c, 8},
    {"_lvmcorr_sample_e12_c", (DL_FUNC) &_lvmcorr_sample_e12_c, 14},
    {"_lvmcorr_test1", (DL_FUNC) &_lvmcorr_test1, 2},
    {"_lvmcorr_test2", (DL_FUNC) &_lvmcorr_test2, 2},
    {"_lvmcorr_test13", (DL_FUNC) &_lvmcorr_test13, 2},
    {"_lvmcorr_sample_g_c", (DL_FUNC) &_lvmcorr_sample_g_c, 4},
    {"_lvmcorr_sample_sig2_tp_c", (DL_FUNC) &_lvmcorr_sample_sig2_tp_c, 6},
    {"_lvmcorr_sample_sig2_fp_c", (DL_FUNC) &_lvmcorr_sample_sig2_fp_c, 6},
    {"_lvmcorr_sample_rho_c", (DL_FUNC) &_lvmcorr_sample_rho_c, 5},
    {"_lvmcorr_log_rho_export", (DL_FUNC) &_lvmcorr_log_rho_export, 6},
    {"_lvmcorr_sample_Sigma_new1", (DL_FUNC) &_lvmcorr_sample_Sigma_new1, 1},
    {"_lvmcorr_sample_rho", (DL_FUNC) &_lvmcorr_sample_rho, 4},
    {"_lvmcorr_sample_sig2", (DL_FUNC) &_lvmcorr_sample_sig2, 4},
    {"_lvmcorr_sample_sig2_sep", (DL_FUNC) &_lvmcorr_sample_sig2_sep, 6},
    {"_lvmcorr_sample_u_c", (DL_FUNC) &_lvmcorr_sample_u_c, 4},
    {"_lvmcorr_sample_sig2_u", (DL_FUNC) &_lvmcorr_sample_sig2_u, 1},
    {"_lvmcorr_test_inv_gamma", (DL_FUNC) &_lvmcorr_test_inv_gamma, 3},
    {"_lvmcorr_my_trunc_norm", (DL_FUNC) &_lvmcorr_my_trunc_norm, 2},
    {"_lvmcorr_sample_u_tp_new", (DL_FUNC) &_lvmcorr_sample_u_tp_new, 4},
    {"_lvmcorr_sample_u_fp_new", (DL_FUNC) &_lvmcorr_sample_u_fp_new, 4},
    {"_lvmcorr_test3", (DL_FUNC) &_lvmcorr_test3, 5},
    {"_lvmcorr_sample_e1234", (DL_FUNC) &_lvmcorr_sample_e1234, 16},
    {"_lvmcorr_sample_e1234_general", (DL_FUNC) &_lvmcorr_sample_e1234_general, 17},
    {"_lvmcorr_sample_xi", (DL_FUNC) &_lvmcorr_sample_xi, 13},
    {"_lvmcorr_print_prob_m1", (DL_FUNC) &_lvmcorr_print_prob_m1, 15},
    {"_lvmcorr_print_prob_m", (DL_FUNC) &_lvmcorr_print_prob_m, 15},
    {NULL, NULL, 0}
};

RcppExport void R_init_lvmcorr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
